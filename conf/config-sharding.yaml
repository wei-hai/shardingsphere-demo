#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

######################################################################################################
#
# Here you can configure the rules for the proxy.
# This example is configuration of sharding rule.
#
######################################################################################################

databaseName: sharding_db

dataSources:
  ds_0:
    url: jdbc:postgresql://host.docker.internal:5432/dbname?serverTimezone=UTC&useSSL=false
    username: user
    password: pass
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 50
    minPoolSize: 1
  ds_1:
    url: jdbc:postgresql://host.docker.internal:5433/dbname?serverTimezone=UTC&useSSL=false
    username: user
    password: pass
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 50
    minPoolSize: 1

rules:
- !SHARDING
  tables:
    tickets:
      actualDataNodes: ds_${0..1}.tickets_${0..1}
      tableStrategy:
        standard:
          shardingColumn: org_id
          shardingAlgorithmName: tickets_sharding_algo
      keyGenerateStrategy:
        column: ticket_id
        keyGeneratorName: snowflake
    attachments:
      actualDataNodes: ds_${0..1}.attachments_${0..1}
      tableStrategy:
        standard:
          shardingColumn: org_id
          shardingAlgorithmName: attachments_sharding_algo
      keyGenerateStrategy:
        column: attachment_id
        keyGeneratorName: snowflake
  bindingTables:
    - tickets,attachments
  defaultDatabaseStrategy:
    standard:
      shardingColumn: org_id
      shardingAlgorithmName: database_sharding_algo
  defaultTableStrategy:
    none:

  shardingAlgorithms:
    database_sharding_algo:
      type: INLINE
      props:
        algorithm-expression: ds_${org_id % 2}
    tickets_sharding_algo:
      type: INLINE
      props:
        algorithm-expression: tickets_${org_id.intdiv(2) % 2}
    attachments_sharding_algo:
      type: INLINE
      props:
        algorithm-expression: attachments_${org_id.intdiv(2) % 2}

  keyGenerators:
    snowflake:
      type: SNOWFLAKE
      props:
        worker-id: 123
